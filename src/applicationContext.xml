<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
			http://www.springframework.org/schema/context 
			http://www.springframework.org/schema/context/spring-context-3.1.xsd
			http://www.springframework.org/schema/aop 
			http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
			http://www.springframework.org/schema/tx 
			http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
			http://www.springframework.org/schema/mvc 
			http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
			">

	<context:annotation-config />
	<!-- 对web包中的所有类进行扫描，以完成Bean创建和自动依赖注入的功能 -->
	<context:component-scan base-package="*" />
    
	<context:property-placeholder location="classpath:db.properties"></context:property-placeholder>

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		
		<!-- 每60秒检查所有连接池中的空闲连接。Default: 0 -->
		<property name="idleConnectionTestPeriod" value="60"/>
	    <!--初始化时获取三个连接，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
	    <property name="initialPoolSize" value="30"/>
	    <!--连接池中保留的最小连接数 -->
	    <property name="minPoolSize" value="2"/>
	    <!--  连接池中保留的最大连接数。Default: 15 -->
	    <property name="maxPoolSize" value="50"/>
	    <!--   最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
	    <property name="maxIdleTime" value="60"/>
	    <!--JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。但由于预缓存的statements
	                        属于单个connection而不是整个连接池。所以设置这个参数需要考虑到多方面的因素。
	                        如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0 -->
	    <property name="maxStatements" value="100"/>
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<!-- hibernate自身属性 -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<!--<prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop>-->
				<prop key="hibernate.temp.use_jdbc_metadata_defaults">false</prop>
			</props>
		</property>
		<!-- 扫描实体类 -->
		<property name="packagesToScan" value="*"></property>
	</bean>

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>

	<!-- 配置声明式事务 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">  
		<tx:attributes>  
	        <tx:method name="find*" read-only="true" />
			<tx:method name="read*" read-only="true" />
			<tx:method name="get*" read-only="true" />
			<tx:method name="*" /> 
	    </tx:attributes>  
	</tx:advice>  
	<aop:config>  
	       <aop:pointcut id="txPointcut" expression="execution(* com.miaxis..service.*.*(..))" />  
	       <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut" />  
	</aop:config>  
	
	<mvc:annotation-driven>
	 <mvc:message-converters>  
            <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">  
                <property name="supportedMediaTypes"> 
				 <list> 
					 <value>text/html;charset=UTF-8</value> 
				 </list> 
		 		</property> 
            </bean>  
        </mvc:message-converters>  
	</mvc:annotation-driven>  
    <!--<bean id="customObjectMapper" class="com.miaxis.common.springmvc.CustomObjectMapper"></bean>  -->
    
   <!-- 配置拦截器 -->
	<mvc:interceptors>
		<!-- 多个拦截器,顺序执行 -->
		<mvc:interceptor>
			<mvc:mapping path="/*" />  <!-- 如果不配置或/*,将拦截所有的Controller -->
			<bean class="com.miaxis.common.springmvc.Interceptor">
				<property name="excludeUrls">
					<list>
						<value>main.do?login</value>
						<value>main.do?loginSubmit</value>
						<value>userAuthMachine.do?apply</value>
						<value>userAuthMachine.do?applySubmit</value>
					</list>
				</property>
				<property name="runTimeOut">
					<value>${jdbc.runTimeOut}</value>
				</property>
			</bean>
		</mvc:interceptor>
	</mvc:interceptors>
	
	<!-- SpringMVC上传文件时，需要配置MultipartResolver处理器 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 指定所上传文件的总大小不能超过200KB。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->
		<property name="maxUploadSize" value="100000000" />
	</bean>
</beans>
 